# -*- mode:shell-script -*-
path=(/usr/local/sbin /usr/local/bin /usr/sbin /usr/bin /sbin /bin /snap/bin)
fpath=(~/.zsh/zsh-completions/src ~/.zsh/completions $fpath)
autoload -U compinit
compinit

autoload colors
colors

autoload -Uz add-zsh-hook

umask 022

# for move by word
autoload -Uz select-word-style
select-word-style bash
WORDCHARS="${WORDCHARS}:"

autoload -Uz smart-insert-last-word
zle -N insert-last-word smart-insert-last-word
zstyle :insert-last-word match '*[[:alnum:]/\\]*'

# History
HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
setopt hist_ignore_dups
setopt hist_ignore_all_dups
setopt hist_ignore_space
setopt share_history

# show processing time for too long process
REPORTTIME=10

# key-type is Emacs
bindkey -e
bindkey '^U' backward-kill-line

# Delete under cursor key
bindkey -s '^W' '^[^B^[^K'

# Mode/Delete like emacs symbol one
bindkey '^[^B' vi-backward-blank-word
bindkey '^[^F' vi-forward-blank-word
bindkey '^[^K' delete-word

# for incremental search
bindkey '^R' history-incremental-pattern-search-backward
bindkey '^S' history-incremental-pattern-search-forward

# unbind keys for miss typing
bindkey -r '^O'
bindkey -r '^J'

# not complete command, these completion is too long.
compdef -d java

setopt ignoreeof
setopt NOHUP
setopt nocheckjobs
setopt noautoremoveslash
setopt null_glob no_nomatch
setopt NO_beep
setopt nolistbeep
setopt re_match_pcre
setopt magic_equal_subst
setopt interactive_comments

unsetopt promptcr

# completion like emacs
zstyle ':completion:*:default' menu select=1
zstyle ':completion:*' use-cache true

if [[ -n $DISPLAY ]]; then
  stty stop undef
fi

autoload history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey "^P" history-beginning-search-backward-end
bindkey "^N" history-beginning-search-forward-end

export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export EDITOR="vim"
export PAGER='less'
export LESSCHARSET=utf-8

local LIST_COLOR='di=34;1' 'ln=35' 'so=32' 'ex=32;1' 'bd=46;34' 'cd=43;34'
zstyle ':completion:*' list-colors $LIST_COLOR

alias ls='exa -F'
alias bat="batcat --theme='OneHalfDark'"
alias grep='grep --color=always'
alias emacs='env COLORTERM=true emacs'
alias e='emacsclient'
alias s='git status -s -b'
alias d='git diff'
alias dc='git diff --cached'
alias dw='git diff --word-diff'
alias dwc='git diff --cached --word-diff'
alias -g L='|less -R'
alias -g G='|grep'

if [[ -z $DISPLAY || -n $WSLENV ]]; then
  alias b='gh browse -n'
  export GPG_TTY=$(tty)
else
  alias b='gh browse'
fi

if [[ -n $WSLENV ]]; then
  alias -g C='| /mnt/c/Windows/System32/clip.exe'
else
  if [[ "$OSTYPE" == "linux-gnu" ]]; then
    alias -g C='| xsel --input --clipboard'
    alias open='xdg-open'
    alias start='xdg-open'
  else
    # macOS
    alias -g C='| pbcopy'
    alias start='open'
  fi
fi

# prompt
returncode="%(?..%F{199} %Berr=%?%b %f)"
PROMPT="%B%F{220}%m:%f%b${returncode}%# "

autoload -Uz vcs_info
setopt prompt_subst
zstyle ':vcs_info:*' formats "%F{201}(%b)%c%u%f"
zstyle ':vcs_info:*' actionformats '[%s]-(%b|%a)'
zstyle ':vcs_info:*' check-for-changes true
zstyle ':vcs_info:*' stagedstr "%F{49}+%f"
zstyle ':vcs_info:*' unstagedstr "%F{214}!%f"

_call_vcs_info() {
  vcs_info
}

add-zsh-hook precmd _call_vcs_info

_DIRPART="%F{75}%B[%(5~,%-2~/.../%2~,%~)]%b%f"
RPROMPT=%B'${vcs_info_msg_0_}'%b${_DIRPART}

# cdr
autoload -Uz chpwd_recent_dirs cdr add-zsh-hook
add-zsh-hook chpwd chpwd_recent_dirs
zstyle ':chpwd:*' recent-dirs-max 500
zstyle ':chpwd:*' recent-dirs-default yes
zstyle ':completion:*' recent-dirs-insert both

# zaw
source ~/.zsh/zaw/zaw.zsh
bindkey '^x^x' zaw-cdr
bindkey '^xd' zaw-git-directories
bindkey '^x^r' zaw-history

# completion git(too slowly in big repository)
__git_files () {
  _wanted files expl 'local files' _files
}

# cd to git root
function cdp() {
  local dir=$(git rev-parse --show-toplevel 2>/dev/null)
  if [[ $? == 0 ]]; then
    cd $dir
  else
    echo "'$PWD' is not a git repository"
  fi
}

## Chdir to directory of current buffer
function cde() {
  local emacs_cwd=$(emacsclient -e \
    "(editutil-current-buffer-directory)" | awk '{gsub("\"", ""); print}' )

  if [[ "$emacs_cwd" == "nil" ]]; then
    echo "Could not get the directory of current buffer in Emacs"
    return 1
  fi

  cd "$emacs_cwd"
  pwd
}

function _delete_previous_word () {
  local lbuf
  lbuf=$LBUFFER

  if [[ "$lbuf" == "" ]]; then
    return
  fi

  LBUFFER=$(perl -we '@a = split / /, shift; pop @a; print $_, " " for @a;' $lbuf)
  CURSOR=$#LBUFFER
}
zle -N delete_previous_word _delete_previous_word
bindkey '^[^U' delete_previous_word

if [[ -d ~/.plenv ]]; then
  export PERLDOC_PAGER='less -R'
  path=(~/.plenv/bin $path)
  eval "$(plenv init -)"
fi

export GOROOT=$HOME/local/go
export GOPATH=$HOME/go
path=($GOROOT/bin(N-/) $GOPATH/bin(N-/) $path)

if [[ "$TERM_PROGRAM" == "tmux" ]]; then
  export TERM=tmux-256color
else
  export TERM=xterm-256color
fi

if [[ -e ~/.dotnet/dotnet ]]; then
  export DOTNET_ROOT=$HOME/.dotnet
  path=(~/.dotnet $path)
fi

if [[ -n $WSLENV ]]; then
  path=(/mnt/c/Users/*/AppData/Local/Programs/Microsoft\ VS\ Code/bin(N-/) $path)
fi

path=(~/local/*/bin $path)
path=(~/.local/bin(N-/) ~/.cargo/bin(N-/) ~/.dotnet/tools(N-/) $path)
path=(~/bin $path)
